spring.application.name=Dev
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5433/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:aliS}
spring.datasource.driver-class-name:org.postgresql.Driver

spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:alialisuharto@gmail.com}
spring.mail.password=${MAIL_PASSWORD:ibfa afjy rjzo pvpv}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.address=0.0.0.0
server.port=8080


jwt.secret=${JWT_SECRET:mySecretKeyThatIsAtLeast32CharactersLong123456789}
jwt.expiration=${JWT_EXPIRATION:86400000}



spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin}
spring.security.user.roles=${ADMIN_ROLE:ADMIN}

spring.jpa.hibernate.ddl-auto=validate

#Autres options possibles:create
# create : Cr�e les tables � chaque d�marrage (supprime les donn�es existantes)
# create-drop : Cr�e au d�marrage, supprime � l'arr�t
# update : Met � jour le sch�ma sans supprimer les donn�es
# validate : Valide le sch�ma sans modification
# none : Aucune action automatique

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configuration pour afficher les logs SQL
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE